name: Scheduled Stock Check

on:
  schedule:
    - cron: '*/5 * * * *' # Every 5 minutes UTC
  workflow_dispatch: {}

jobs:
  run-stock-checker:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      
      - name: Remove old .env file
        run: rm -f .env
        
      - name: Create .env file
        run: |
          echo "TARGET_URL=${{ secrets.TARGET_URL }}" >> .env
          echo "FLAG_KEYWORDS=${{ secrets.FLAG_KEYWORDS }}" >> .env
          echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}" >> .env
          echo "CHAT_ID=${{ secrets.CHAT_ID }}" >> .env

      - name: Restore item timestamp cache
        uses: actions/cache@v4
        id: cache
        with:
          path: cache
          key: item-timestamps-cache

      - name: Ensure cache directory exists
        run: |
          mkdir -p cache
          if [ ! -f cache/itemTimestamps.json ] || [ ! -s cache/itemTimestamps.json ]; then
            echo '{}' > cache/itemTimestamps.json
          fi

      - name: Run container with cache mounted
        run: |
          docker pull ghcr.io/asbarron/grow-a-garden-bot:latest
          docker run --rm \
            --env-file .env \
            -v "$(pwd)/cache:/app/cache" \
            ghcr.io/asbarron/grow-a-garden-bot:latest
      
      - name: Save item timestamp cache
        uses: actions/cache@v4
        with:
          path: cache
          key: item-timestamps-cache
      
      - name: Upload itemTimestamps.json as artifact
        uses: actions/upload-artifact@v4
        with:
          name: item-timestamps
          path: cache/itemTimestamps.json
          retention-days: 1
